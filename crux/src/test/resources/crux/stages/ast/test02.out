ast.DeclarationList(3,0)
  ast.VariableDeclaration(3,0)[Symbol(i)]
  ast.VariableDeclaration(4,0)[Symbol(j)]
  ast.FunctionDefinition(6,0)[Symbol(main), []]
    ast.StatementList(7,2)
      ast.Call(7,2)[Symbol(printInt)]
        ast.OpExpr(7,14)[ADD]
          ast.Dereference(7,13)
            ast.Name(7,13)[i]
          ast.Dereference(7,15)
            ast.Name(7,15)[j]
      ast.Call(8,2)[Symbol(printInt)]
        ast.OpExpr(8,14)[SUB]
          ast.Dereference(8,13)
            ast.Name(8,13)[j]
          ast.Dereference(8,15)
            ast.Name(8,15)[i]
      ast.Call(9,2)[Symbol(printInt)]
        ast.OpExpr(9,14)[DIV]
          ast.Dereference(9,13)
            ast.Name(9,13)[j]
          ast.Dereference(9,15)
            ast.Name(9,15)[i]
      ast.Call(10,2)[Symbol(printInt)]
        ast.OpExpr(10,14)[MULT]
          ast.Dereference(10,13)
            ast.Name(10,13)[j]
          ast.Dereference(10,15)
            ast.Name(10,15)[i]
      ast.Call(11,2)[Symbol(printInt)]
        ast.OpExpr(11,20)[SUB]
          ast.OpExpr(11,16)[ADD]
            ast.LiteralInt(11,14)[1]
            ast.LiteralInt(11,18)[2]
          ast.OpExpr(11,32)[MULT]
            ast.OpExpr(11,28)[DIV]
              ast.OpExpr(11,24)[MULT]
                ast.LiteralInt(11,22)[3]
                ast.LiteralInt(11,26)[5]
              ast.LiteralInt(11,30)[6]
            ast.OpExpr(11,36)[SUB]
              ast.LiteralInt(11,35)[7]
              ast.LiteralInt(11,37)[8]
